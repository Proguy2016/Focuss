import * as React from "react";
import { cn } from "@/lib/utils";

interface ColoredGlassCardProps extends React.HTMLAttributes<HTMLDivElement> {
    borderColor?: string; // Tailwind class or custom style
    children: React.ReactNode;
    isPremium?: boolean; // New prop
}

const ColoredGlassCard = React.forwardRef<HTMLDivElement, ColoredGlassCardProps>(
    ({ className, borderColor = "border-[var(--primary)]/40", children, isPremium = false, ...props }, ref) => {
        const baseClasses = "rounded-xl border shadow backdrop-blur-md";
        const premiumClasses = isPremium ? "premium-glass-card" : ""; // Uses styles from index.css
        // For non-premium, use default border or passed borderColor. For premium, premium-glass-card handles its own border.
        const borderClass = isPremium ? "" : borderColor; 
        // Premium card style might define its own background, so conditional style for non-premium
        const backgroundStyle = isPremium ? {} : { background: 'linear-gradient(135deg, var(--dark) 0%, var(--dark-light) 100%)' };

        return (
            <div
                ref={ref}
                style={backgroundStyle}
                className={cn(
                    baseClasses,
                    borderClass,
                    premiumClasses,
                    className
                )}
                {...props}
            >
                {children}
            </div>
        );
    }
);
ColoredGlassCard.displayName = "ColoredGlassCard";

export { ColoredGlassCard };
export default ColoredGlassCard; 